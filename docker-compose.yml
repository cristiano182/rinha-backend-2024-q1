version: "3.5"

services:
  api01: &api
    image: cristiano182/rinha-backend-2024-q1:latest
    restart: always
    environment:
      - POSTGRES_URL=postgres://admin:123@postgres:5432/rinha
      - PORT=3000
      - IS_PRIMARY_NODE=true
      - UV_THREADPOOL_SIZE=2
      - POSTGRES_MAX_POOL=100
      - POSTGRES_MIN_POOL=30
    depends_on:
      - postgres
    ulimits:
        nproc: 1000000
        nofile:
          soft: 1000000
          hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "110MB"
  api02:
    <<: *api 
    environment:
      - POSTGRES_URL=postgres://admin:123@postgres:5432/rinha
      - PORT=3001
      - IS_PRIMARY_NODE=false
      - UV_THREADPOOL_SIZE=2
      - POSTGRES_MAX_POOL=100
      - POSTGRES_MIN_POOL=30
  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999" 
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "55MB"
  postgres:
    image: postgres:15.6-alpine3.18
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    ports:
       - "5432:5432" 
    command: postgres  -c 'max_connections=666' -c 'log_error_verbosity=terse' -c 'checkpoint_timeout=600' -c 'max_wal_size=4096' -N 50 -c shared_buffers=256MB
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "275MB"